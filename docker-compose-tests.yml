version: "3.3"
networks:
  default:
    driver: bridge

services:
  redis:
    image: redis:alpine
    restart: always
    command: redis-server
    ports:
      - 6379:6379

  mysql:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: minded_local
    ports:
      - 3306:3306

  api:
    build:
      context: .
      dockerfile: Dockerfile
    command: npm run start
    depends_on:
      - mysql
      - redis
    ports:
      - 3080:3080
    volumes:
      - ./:/usr/src/app
      - ./.data/logs:/var/log
      - /usr/src/app/node_modules

  e2e-test:
    image: build_image
    container_name: e2e-test
    command: sh -c "/wait && npm run test:e2e"
    env_file:
      - .env
    environment:
      WAIT_HOSTS: redis:6379, mysql:3306
    depends_on:
      - mysql
      - redis
    ports:
      - 3000:3000

  unit-test:
    image: build_image
    command: npm run test
    environment:
      MYSQL_HOST: mysql-service
      MYSQL_USER: root
      MYSQL_PORT: 3306
      MYSQL_DB: minded_local
      MYSQL_PASS: root
    depends_on:
      - mysql
      - redis
    ports:
      - 3001:3001

  cov-test:
    image: build_image
    command: npm run test:cov
    environment:
      MYSQL_HOST: mysql-service
      MYSQL_USER: root
      MYSQL_PORT: 3306
      MYSQL_DB: minded_local
      MYSQL_PASS: root
    depends_on:
      - mysql
      - redis
    ports:
      - 3002:3002

volumes:
  redis_data:
  mysql_data:
